//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.db
{

public sealed partial class DamageCfg :  Bright.Config.BeanBase 
{
    public DamageCfg(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["hurt"].IsNumber) { throw new SerializationException(); }  Hurt = _json["hurt"]; }
        { if(!_json["lookAttacker"].IsBoolean) { throw new SerializationException(); }  LookAttacker = _json["lookAttacker"]; }
        { if(!_json["acceleration"].IsNumber) { throw new SerializationException(); }  Acceleration = _json["acceleration"]; }
        { if(!_json["velocityX"].IsNumber) { throw new SerializationException(); }  VelocityX = _json["velocityX"]; }
        { if(!_json["heightY"].IsNumber) { throw new SerializationException(); }  HeightY = _json["heightY"]; }
        { if(!_json["velocityXY"].IsNumber) { throw new SerializationException(); }  VelocityXY = _json["velocityXY"]; }
        { if(!_json["recoverTime"].IsNumber) { throw new SerializationException(); }  RecoverTime = _json["recoverTime"]; }
        { if(!_json["damageAttribute"].IsNumber) { throw new SerializationException(); }  DamageAttribute = (DamageAttribute)_json["damageAttribute"].AsInt; }
        { if(!_json["haltFrame_Target"].IsNumber) { throw new SerializationException(); }  HaltFrameTarget = _json["haltFrame_Target"]; }
        { if(!_json["haltFrame_Self"].IsNumber) { throw new SerializationException(); }  HaltFrameSelf = _json["haltFrame_Self"]; }
        PostInit();
    }

    public DamageCfg(int id, float hurt, bool lookAttacker, float acceleration, float velocityX, float heightY, float velocityXY, float recoverTime, DamageAttribute damageAttribute, float haltFrame_Target, float haltFrame_Self ) 
    {
        this.Id = id;
        this.Hurt = hurt;
        this.LookAttacker = lookAttacker;
        this.Acceleration = acceleration;
        this.VelocityX = velocityX;
        this.HeightY = heightY;
        this.VelocityXY = velocityXY;
        this.RecoverTime = recoverTime;
        this.DamageAttribute = damageAttribute;
        this.HaltFrameTarget = haltFrame_Target;
        this.HaltFrameSelf = haltFrame_Self;
        PostInit();
    }

    public static DamageCfg DeserializeDamageCfg(JSONNode _json)
    {
        return new db.DamageCfg(_json);
    }

    /// <summary>
    /// 伤害id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 伤害
    /// </summary>
    public float Hurt { get; private set; }
    /// <summary>
    /// 是否朝向攻击者
    /// </summary>
    public bool LookAttacker { get; private set; }
    /// <summary>
    /// 加速度
    /// </summary>
    public float Acceleration { get; private set; }
    /// <summary>
    /// X轴速度
    /// </summary>
    public float VelocityX { get; private set; }
    /// <summary>
    /// 浮空高度
    /// </summary>
    public float HeightY { get; private set; }
    /// <summary>
    /// 浮空X轴速度
    /// </summary>
    public float VelocityXY { get; private set; }
    /// <summary>
    /// 硬直时间
    /// </summary>
    public float RecoverTime { get; private set; }
    /// <summary>
    /// 伤害属性
    /// </summary>
    public DamageAttribute DamageAttribute { get; private set; }
    /// <summary>
    /// 被击者顿帧系数
    /// </summary>
    public float HaltFrameTarget { get; private set; }
    /// <summary>
    /// 攻击者顿帧系数
    /// </summary>
    public float HaltFrameSelf { get; private set; }

    public const int __ID__ = -703951643;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Hurt:" + Hurt + ","
        + "LookAttacker:" + LookAttacker + ","
        + "Acceleration:" + Acceleration + ","
        + "VelocityX:" + VelocityX + ","
        + "HeightY:" + HeightY + ","
        + "VelocityXY:" + VelocityXY + ","
        + "RecoverTime:" + RecoverTime + ","
        + "DamageAttribute:" + DamageAttribute + ","
        + "HaltFrameTarget:" + HaltFrameTarget + ","
        + "HaltFrameSelf:" + HaltFrameSelf + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
